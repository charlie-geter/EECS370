package  {		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.KeyboardEvent;	import flash.ui.Keyboard;	import com.coreyoneil.collision.CollisionList;	public class PlatformerMain extends MovieClip {		var myPlayer:Player;		var upPressed:Boolean = false;		var upWasPressed:Boolean = false;		var downPressed:Boolean = false;		var leftPressed:Boolean = false;		var rightPressed:Boolean = false;		var isPlayerDead:Boolean = false;		var isPlayerFinished:Boolean = false;		var walls:CollisionList;		var enemies:CollisionList;		var environment:Array;		var xmin:Number;		var xmax:Number;						public function PlatformerMain() {			// constructor code			myPlayer = new Player( 200, 200);			addChild(myPlayer);						addEventListener( Event.ADDED_TO_STAGE, onAddToStage );			addEventListener(Event.ENTER_FRAME, executeFrame);		}				public function constructDemo(){			//		}				public function onAddToStage( event:Event ):void		{			stage.addEventListener( KeyboardEvent.KEY_DOWN, setKeyPressed  );			stage.addEventListener( KeyboardEvent.KEY_UP, unsetKeyPressed );			xmin = 0;			xmax = stage.width;			constructDemo();		}				function executeFrame(event:Event)		{			movePlayer(event);		}				function movePlayer(event:Event)		{			if (!myPlayer.onPlatform)			{				myPlayer.dy += 5;			}			if (upPressed)			{				if(upWasPressed){					if( myPlayer.dy <= -10){						myPlayer.dy -=2.5;					}				}else{					if(myPlayer.onPlatform){						myPlayer.dy = -25;						myPlayer.onPlatform = false;						upWasPressed = true;					}				}			}			/*if (downPressed)			{				myPlayer.dy = Math.min(myPlayer.dy+2, 10);			}*/			if (leftPressed)			{				if(myPlayer.dx >= 0){					myPlayer.dx = Math.floor(myPlayer.dx / 2) - 3;				}else{					myPlayer.dx = Math.max(myPlayer.dx-3, -15);				}			}			if (rightPressed)			{				if(myPlayer.dx <= 0){					myPlayer.dx = Math.floor(myPlayer.dx / 2) + 3;				}else{					myPlayer.dx = Math.min(myPlayer.dx+3, 15);				}			}			if (!rightPressed && !leftPressed)			{				myPlayer.dx = 0;			}			/*if (!downPressed && !upPressed)			{				myPlayer.dy = 0;			}*/						myPlayer.x += myPlayer.dx;			myPlayer.y += myPlayer.dy;			if(myPlayer.y > (600 - myPlayer.height / 2))			{				myPlayer.y = 600 - myPlayer.height / 2;				myPlayer.Land();				upWasPressed = false;			}		}		function setKeyPressed(event:KeyboardEvent):void		{			switch (event.keyCode)			{				case Keyboard.UP:				{					if(upPressed){						//upWasPressed = true;					}else{						upPressed = true;						upWasPressed = false;					}					break;				}				case Keyboard.DOWN:				{					downPressed = true;					break;				}				case Keyboard.LEFT:				{					leftPressed = true;					break;				}				case Keyboard.RIGHT:				{					rightPressed = true;					break;				}			}		}				function unsetKeyPressed(event:KeyboardEvent):void		{			switch (event.keyCode)			{				case Keyboard.UP:				{					upPressed = false;					break;				}				case Keyboard.DOWN:				{					downPressed = false;					break;				}				case Keyboard.LEFT:				{					leftPressed = false;					break;				}				case Keyboard.RIGHT:				{					rightPressed = false;					break;				}			}		}	}	}